PS C:\Users\Atul Kumar\Desktop\devops> terraform apply  
var.db_password
  Database master user password

  Enter a value: 

var.db_username
  Database master user

  Enter a value: 

var.my_ip
  Your IP address

  Enter a value: 

data.aws_availability_zones.available: Reading...
data.aws_availability_zones.available: Read complete after 2s [id=us-east-1]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_db_instance.devops_database will be created
  + resource "aws_db_instance" "devops_database" {
      + address                               = (known after apply)
      + allocated_storage                     = 10
      + apply_immediately                     = (known after apply)
      + arn                                   = (known after apply)
      + auto_minor_version_upgrade            = true
      + availability_zone                     = (known after apply)
      + backup_retention_period               = (known after apply)
      + backup_window                         = (known after apply)
      + ca_cert_identifier                    = (known after apply)
      + character_set_name                    = (known after apply)
      + copy_tags_to_snapshot                 = false
      + db_name                               = "devops"
      + db_subnet_group_name                  = (known after apply)
      + delete_automated_backups              = true
      + endpoint                              = (known after apply)
      + engine                                = "mysql"
      + engine_version                        = "8.0.34"
      + engine_version_actual                 = (known after apply)
      + hosted_zone_id                        = (known after apply)
      + id                                    = (known after apply)
      + identifier                            = (known after apply)
      + identifier_prefix                     = (known after apply)
      + instance_class                        = "db.t2.micro"
      + kms_key_id                            = (known after apply)
      + latest_restorable_time                = (known after apply)
      + license_model                         = (known after apply)
      + maintenance_window                    = (known after apply)
      + monitoring_interval                   = 0
      + monitoring_role_arn                   = (known after apply)
      + multi_az                              = (known after apply)
      + name                                  = (known after apply)
      + nchar_character_set_name              = (known after apply)
      + option_group_name                     = (known after apply)
      + parameter_group_name                  = (known after apply)
      + password                              = (sensitive value)
      + performance_insights_enabled          = false
      + performance_insights_kms_key_id       = (known after apply)
      + performance_insights_retention_period = (known after apply)
      + port                                  = (known after apply)
      + publicly_accessible                   = false
      + replica_mode                          = (known after apply)
      + replicas                              = (known after apply)
      + resource_id                           = (known after apply)
      + skip_final_snapshot                   = true
      + snapshot_identifier                   = (known after apply)
      + status                                = (known after apply)
      + storage_type                          = (known after apply)
      + tags_all                              = (known after apply)
      + timezone                              = (known after apply)
      + username                              = (sensitive value)
      + vpc_security_group_ids                = (known after apply)
    }

  # aws_db_subnet_group.devops_db_subnet_group will be created
  + resource "aws_db_subnet_group" "devops_db_subnet_group" {
      + arn         = (known after apply)
      + description = "DB subnet group for devops"
      + id          = (known after apply)
      + name        = "devops_db_subnet_group"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags_all    = (known after apply)
    }

  # aws_eip.devops_web_eip[0] will be created
  + resource "aws_eip" "devops_web_eip" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "devops_web_eip_0"
        }
      + tags_all             = {
          + "Name" = "devops_web_eip_0"
        }
      + vpc                  = true
    }

  # aws_instance.devops_web[0] will be created
  + resource "aws_instance" "devops_web" {
      + ami                                  = "ami-053b0d53c279acc90"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "devops_kp"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "devops_web_0"
        }
      + tags_all                             = {
          + "Name" = "devops_web_0"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_instance.ec2_example_with_data_source will be created
  + resource "aws_instance" "ec2_example_with_data_source" {
      + ami                                  = "ami-053b0d53c279acc90"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "Terraform EC2"
        }
      + tags_all                             = {
          + "Name" = "Terraform EC2"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_internet_gateway.devops_igw will be created
  + resource "aws_internet_gateway" "devops_igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "devops_igw"
        }
      + tags_all = {
          + "Name" = "devops_igw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_key_pair.devops_kp will be created
  + resource "aws_key_pair" "devops_kp" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "devops_kp"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + tags_all        = (known after apply)
    }

  # aws_route_table.devops_private_rt will be created
  + resource "aws_route_table" "devops_private_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # aws_route_table.devops_public_rt will be created
  + resource "aws_route_table" "devops_public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + instance_id                = ""
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.devops_db_sg will be created
  + resource "aws_security_group" "devops_db_sg" {
      + arn                    = (known after apply)
      + description            = "Security group for devops databases"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = []
              + description      = "Allow MySQL traffic from only the web sg"
              + from_port        = 3306
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = (known after apply)
              + self             = false
              + to_port          = 3306
            },
        ]
      + name                   = "devops_db_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "devops_db_sg"
        }
      + tags_all               = {
          + "Name" = "devops_db_sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.devops_web_sg will be created
  + resource "aws_security_group" "devops_web_sg" {
      + arn                    = (known after apply)
      + description            = "Security group for devops web servers"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow all outbound traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow all traffic through HTTP"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
          + {
              + cidr_blocks      = []
              + description      = "Allow SSH from my computer"
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = "devops_web_sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "devops_web_sg"
        }
      + tags_all               = {
          + "Name" = "devops_web_sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.devops_private_subnet[0] will be created
  + resource "aws_subnet" "devops_private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.101.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "devops_private_subnet_0"
        }
      + tags_all                                       = {
          + "Name" = "devops_private_subnet_0"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.devops_private_subnet[1] will be created
  + resource "aws_subnet" "devops_private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.102.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "devops_private_subnet_1"
        }
      + tags_all                                       = {
          + "Name" = "devops_private_subnet_1"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.devops_public_subnet[0] will be created
  + resource "aws_subnet" "devops_public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "devops_public_subnet_0"
        }
      + tags_all                                       = {
          + "Name" = "devops_public_subnet_0"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.devops_vpc will be created
  + resource "aws_vpc" "devops_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "devops_vpc"
        }
      + tags_all                             = {
          + "Name" = "devops_vpc"
        }
    }

Plan: 18 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + database_endpoint = (known after apply)
  + database_port     = (known after apply)
  + web_public_dns    = (known after apply)
  + web_public_ip     = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_key_pair.devops_kp: Creating...
aws_vpc.devops_vpc: Creating...
aws_instance.ec2_example_with_data_source: Creating...
aws_instance.ec2_example_with_data_source: Still creating... [10s elapsed]
aws_vpc.devops_vpc: Still creating... [10s elapsed]
aws_vpc.devops_vpc: Still creating... [20s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [20s elapsed]
aws_vpc.devops_vpc: Still creating... [30s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [30s elapsed]
aws_vpc.devops_vpc: Still creating... [40s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [40s elapsed]
aws_vpc.devops_vpc: Creation complete after 43s [id=vpc-0fdb7478f874f2060]
aws_subnet.devops_public_subnet[0]: Creating...
aws_subnet.devops_private_subnet[0]: Creating...
aws_internet_gateway.devops_igw: Creating...
aws_route_table.devops_private_rt: Creating...
aws_subnet.devops_private_subnet[1]: Creating...
aws_security_group.devops_web_sg: Creating...
aws_instance.ec2_example_with_data_source: Still creating... [50s elapsed]
aws_security_group.devops_web_sg: Still creating... [10s elapsed]
aws_route_table.devops_private_rt: Still creating... [10s elapsed]
aws_internet_gateway.devops_igw: Still creating... [10s elapsed]
aws_subnet.devops_private_subnet[1]: Still creating... [10s elapsed]
aws_subnet.devops_private_subnet[0]: Still creating... [10s elapsed]
aws_subnet.devops_public_subnet[0]: Still creating... [10s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [1m0s elapsed]
aws_subnet.devops_public_subnet[0]: Still creating... [20s elapsed]
aws_internet_gateway.devops_igw: Still creating... [20s elapsed]
aws_security_group.devops_web_sg: Still creating... [20s elapsed]
aws_route_table.devops_private_rt: Still creating... [20s elapsed]
aws_subnet.devops_private_subnet[0]: Still creating... [20s elapsed]
aws_subnet.devops_private_subnet[1]: Still creating... [20s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [1m10s elapsed]
aws_security_group.devops_web_sg: Still creating... [30s elapsed]
aws_subnet.devops_private_subnet[1]: Still creating... [30s elapsed]
aws_subnet.devops_private_subnet[0]: Still creating... [30s elapsed]
aws_route_table.devops_private_rt: Still creating... [30s elapsed]
aws_internet_gateway.devops_igw: Still creating... [30s elapsed]
aws_subnet.devops_public_subnet[0]: Still creating... [30s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [1m20s elapsed]
aws_subnet.devops_public_subnet[0]: Creation complete after 37s [id=subnet-044b0c31ca63c3f9a]
aws_route_table.devops_private_rt: Creation complete after 37s [id=rtb-0c821d116e430ebd4]
aws_subnet.devops_private_subnet[0]: Creation complete after 38s [id=subnet-0014751a7159e4ec0]
aws_subnet.devops_private_subnet[1]: Creation complete after 39s [id=subnet-0da3963bf48197e91]
aws_route_table_association.private[0]: Creating...
aws_route_table_association.private[1]: Creating...
aws_db_subnet_group.devops_db_subnet_group: Creating...
aws_security_group.devops_web_sg: Still creating... [40s elapsed]
aws_internet_gateway.devops_igw: Still creating... [40s elapsed]
aws_db_subnet_group.devops_db_subnet_group: Creation complete after 7s [id=devops_db_subnet_group]
aws_instance.ec2_example_with_data_source: Still creating... [1m30s elapsed]
aws_route_table_association.private[1]: Still creating... [10s elapsed]
aws_route_table_association.private[0]: Still creating... [10s elapsed]
aws_security_group.devops_web_sg: Still creating... [50s elapsed]
aws_internet_gateway.devops_igw: Still creating... [50s elapsed]
aws_internet_gateway.devops_igw: Creation complete after 51s [id=igw-06fcb1146667060b9]
aws_route_table.devops_public_rt: Creating...
aws_instance.ec2_example_with_data_source: Still creating... [1m40s elapsed]
aws_route_table_association.private[0]: Still creating... [20s elapsed]
aws_route_table_association.private[1]: Still creating... [20s elapsed]
aws_security_group.devops_web_sg: Still creating... [1m0s elapsed]
aws_route_table.devops_public_rt: Still creating... [10s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [1m50s elapsed]
aws_route_table_association.private[1]: Still creating... [30s elapsed]
aws_route_table_association.private[0]: Still creating... [30s elapsed]
aws_security_group.devops_web_sg: Still creating... [1m10s elapsed]
aws_route_table.devops_public_rt: Still creating... [20s elapsed]
aws_route_table_association.private[0]: Creation complete after 37s [id=rtbassoc-05cb263951928ef7c]
aws_route_table_association.private[1]: Creation complete after 37s [id=rtbassoc-01b8c616288faa9ff]
aws_instance.ec2_example_with_data_source: Still creating... [2m0s elapsed]
aws_security_group.devops_web_sg: Still creating... [1m20s elapsed]
aws_route_table.devops_public_rt: Still creating... [30s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [2m10s elapsed]
aws_security_group.devops_web_sg: Still creating... [1m30s elapsed]
aws_route_table.devops_public_rt: Still creating... [40s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [2m20s elapsed]
aws_security_group.devops_web_sg: Still creating... [1m40s elapsed]
aws_route_table.devops_public_rt: Still creating... [50s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [2m30s elapsed]
aws_security_group.devops_web_sg: Still creating... [1m50s elapsed]
aws_route_table.devops_public_rt: Still creating... [1m0s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [2m40s elapsed]
aws_security_group.devops_web_sg: Still creating... [2m0s elapsed]
aws_route_table.devops_public_rt: Still creating... [1m10s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [2m50s elapsed]
aws_security_group.devops_web_sg: Still creating... [2m10s elapsed]
aws_route_table.devops_public_rt: Still creating... [1m20s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [3m0s elapsed]
aws_security_group.devops_web_sg: Still creating... [2m20s elapsed]
aws_route_table.devops_public_rt: Still creating... [1m30s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [3m10s elapsed]
aws_security_group.devops_web_sg: Still creating... [2m30s elapsed]
aws_route_table.devops_public_rt: Still creating... [1m40s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [3m20s elapsed]
aws_security_group.devops_web_sg: Still creating... [2m40s elapsed]
aws_route_table.devops_public_rt: Still creating... [1m50s elapsed]
aws_instance.ec2_example_with_data_source: Still creating... [3m30s elapsed]
aws_security_group.devops_web_sg: Still creating... [2m50s elapsed]
aws_route_table.devops_public_rt: Still creating... [2m0s elapsed]
aws_instance.ec2_example_with_data_source: Creation complete after 3m38s [id=i-04b06b432043cc299]
aws_security_group.devops_web_sg: Still creating... [3m0s elapsed]
aws_route_table.devops_public_rt: Still creating... [2m10s elapsed]
aws_security_group.devops_web_sg: Still creating... [3m10s elapsed]
aws_route_table.devops_public_rt: Still creating... [2m20s elapsed]
aws_security_group.devops_web_sg: Still creating... [3m20s elapsed]
aws_route_table.devops_public_rt: Still creating... [2m30s elapsed]
aws_security_group.devops_web_sg: Still creating... [3m30s elapsed]
aws_route_table.devops_public_rt: Still creating... [2m40s elapsed]
aws_security_group.devops_web_sg: Still creating... [3m40s elapsed]
aws_route_table.devops_public_rt: Still creating... [2m50s elapsed]
aws_security_group.devops_web_sg: Still creating... [3m50s elapsed]
aws_route_table.devops_public_rt: Still creating... [3m0s elapsed]
aws_security_group.devops_web_sg: Still creating... [4m0s elapsed]
aws_route_table.devops_public_rt: Still creating... [3m10s elapsed]
aws_security_group.devops_web_sg: Still creating... [4m10s elapsed]
aws_route_table.devops_public_rt: Still creating... [3m20s elapsed]
aws_security_group.devops_web_sg: Still creating... [4m20s elapsed]
aws_route_table.devops_public_rt: Still creating... [3m30s elapsed]
aws_security_group.devops_web_sg: Still creating... [4m30s elapsed]
aws_route_table.devops_public_rt: Still creating... [3m40s elapsed]
aws_security_group.devops_web_sg: Still creating... [4m40s elapsed]
aws_route_table.devops_public_rt: Still creating... [3m50s elapsed]
aws_security_group.devops_web_sg: Still creating... [4m50s elapsed]
aws_route_table.devops_public_rt: Still creating... [4m0s elapsed]
aws_security_group.devops_web_sg: Still creating... [5m0s elapsed]
aws_route_table.devops_public_rt: Still creating... [4m10s elapsed]